(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{273:function(t,s,a){t.exports=a.p+"assets/img/prototype_chain.b362ba5f.png"},284:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),s("p",[s("img",{attrs:{src:a(273),alt:"Untitled"}})]),t._v(" "),s("ol",[s("li",[t._v("除了基本数据类型，所有数据都是对象类型，也都是 "),s("code",[t._v("new 函数")]),t._v(" 构造出来的，比如")])]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("样例代码")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 普通对象，字面量对象也可以认为是 Object 函数 new 出来的")]),t._v("\nfunc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 普通函数可以认为是 Function 函数 new 出来的")]),t._v("\n")])])])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[t._v("函数也是对象，但比较特殊都有一个名为 "),s("code",[t._v("prototype")]),t._v(" 的属性，其值为一个普通对象，这个对象有 "),s("code",[t._v("constructor")]),t._v("属性，这一属性指向函数对象自身。")])]),t._v(" "),s("li",[s("p",[t._v("所有对象都有一个隐式原型属性 "),s("code",[t._v("__proto__")]),t._v(" ，指向该对象被new创建时使用的函数的 "),s("code",[t._v("prototype")]),t._v(" 属性对象。")])])]),t._v(" "),s("p",[t._v("所有的 JavaScript 对象都会从一个 prototype（原型对象）中继承属性和方法。即当访问一个对象的属性时，先查找对象本身属性，再递归从原型对象查找，这种属性查找的方式被称为原型链（prototype chain）。")]),t._v(" "),s("p",[s("code",[t._v("new func")]),t._v(" 构造一个对象，其具体过程如下：")]),t._v(" "),s("ol",[s("li",[t._v("生成一个空对象，用 "),s("code",[t._v("this")]),t._v(" 表示")]),t._v(" "),s("li",[t._v("让空对象 "),s("code",[t._v("[[Prototype]]")]),t._v(" 为函数 "),s("code",[t._v("func")]),t._v(" 的 "),s("code",[t._v("prototype")]),t._v(" 属性")]),t._v(" "),s("li",[t._v("正常执行函数")]),t._v(" "),s("li",[t._v("如果函数返回基本数据类型，则返回 "),s("code",[t._v("this")]),t._v(" ，否则返回函数返回值。"),s("strong",[t._v("没有显式返回值的函数，默认返回 "),s("code",[t._v("undefined")]),t._v(" 。")])])]),t._v(" "),s("h3",{attrs:{id:"类型判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型判断"}},[t._v("#")]),t._v(" 类型判断")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("typeof")]),t._v(" 来判断基本数据类型，用 "),s("code",[t._v("instanceof")]),t._v(" 判断一个实例是否属于某种类型（原型链判断）")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("instanceof 可能的实现")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("new_instance_of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("leftVaule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rightVaule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rightProto "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rightVaule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    leftVaule "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" leftVaule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leftVaule "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原型链顶端为 null")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("leftVaule "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" rightProto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n        leftVaule "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" leftVaule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("p",[t._v("注意：")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("typeof")]),t._v(" 不能判断对象具体类型，会判定 "),s("code",[t._v("null")]),t._v(" 为对象类型("),s("code",[t._v("instanceof")]),t._v(" 认为不是)")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("instanceof")]),t._v(" 判断数组为对象")])])]),t._v(" "),s("h2",{attrs:{id:"this-指向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this-指向"}},[t._v("#")]),t._v(" this 指向")]),t._v(" "),s("ol",[s("li",[t._v("函数在浏览器全局环境中被简单调用，非严格模式下"),s("code",[t._v("this")]),t._v("指向"),s("code",[t._v("window")]),t._v("; 在"),s("code",[t._v("use strict")]),t._v("严格模式下指向"),s("code",[t._v("undefined")]),t._v(".")]),t._v(" "),s("li",[t._v("当一个函数被调用时，拥有它的 object 会作为 "),s("code",[t._v("this")]),t._v(" 传入。")]),t._v(" "),s("li",[t._v("bind/call/apply 改变 "),s("code",[t._v("this")]),t._v(" 指向")]),t._v(" "),s("li",[t._v("new 函数生成对象时（不考虑 return 其他对象情况），指向生成的对象")])])])}),[],!1,null,null,null);s.default=e.exports}}]);